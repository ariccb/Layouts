<Grid xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:zones="clr-namespace:LostTech.Stack.Zones;assembly=Stack"
  xmlns:behavior="clr-namespace:LostTech.Stack.Behavior;assembly=Stack" zones:Layout.Version="2" mc:Ignorable="d" Width="2100" Height="900" d:DesignWidth="2100" d:DesignHeight="900">

  <!-- ===================================================================== -->

  <Grid.Resources>
    <ResourceDictionary>
      <sys:Double x:Key="GripSize">140</sys:Double>
      <sys:Double x:Key="GripFontSize">80</sys:Double>
      <!-- Define fixed tab width -->
      <Style TargetType="zones:WindowButton">
        <Setter Property="Width" Value="160"/>
        <Style.Resources>
          <Style TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
          </Style>
        </Style.Resources>
      </Style>
    </ResourceDictionary>
  </Grid.Resources>

  <!-- ===================================================================== -->
  <!-- Define columns -->
  <Grid.ColumnDefinitions>

    <!-- Column 0: Margin of zero width, or of equivalent size to an empty SecondaryStack -->
    <ColumnDefinition>
      <ColumnDefinition.Style>
        <Style>
          <Setter Property="ColumnDefinition.Width" Value="0"/>
          <Style.Triggers>
            <!-- Redefine width if nothing is in SecondaryStack -->
            <DataTrigger Binding="{Binding Windows.Count, ElementName=SecondarySingle}" Value="0">
              <Setter Property="ColumnDefinition.Width" Value="1*"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </ColumnDefinition.Style>
    </ColumnDefinition>

    <!-- Column 1: MasterStack -->
    <ColumnDefinition>
      <ColumnDefinition.Style>
        <Style>
          <Setter Property="ColumnDefinition.Width" Value="6*"/>
          <Style.Triggers>
            <!-- Redefine width if nothing is in SecondaryStack -->
            <DataTrigger Binding="{Binding Windows.Count, ElementName=SecondarySingle}" Value="0">
              <Setter Property="ColumnDefinition.Width" Value="500*"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </ColumnDefinition.Style>
    </ColumnDefinition>

    <!-- Column 2: Gridgripper -->
    <ColumnDefinition Width="Auto"/>

    <!-- Column 3: SecondaryStack -->
    <ColumnDefinition Width="2*"/>

  </Grid.ColumnDefinitions>

  <!-- ===================================================================== -->

  <!-- Describe column 1 -->
  <Grid Grid.Column="1">
    <!-- Define rows within column 1 -->
    <Grid.RowDefinitions>
      <!-- Row 0 automatic sizing (for tab bar) -->
      <RowDefinition Height="Auto"/>
      <!-- Row 1 sizing use remainder of screen (where windows go) -->
      <RowDefinition Height="*" />
      <RowDefinition Height="*" />
    </Grid.RowDefinitions>
    <!-- Define columns within Column 1 -->
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>


    <!-- Create tab bar (row 0) -->
    <Grid Grid.Row="0" Grid.Column="0">

      <zones:WindowTabs VisibilityCondition="AlwaysVisible">
        <zones:WindowTabs.ItemsSource>
          <CompositeCollection>
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference MasterStack}}" />
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference LeftMain}}" />
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference TopMain}}" />
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference BottomMain}}" />
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference TopLeft}}" />
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference BottomLeft}}" />
          </CompositeCollection>
        </zones:WindowTabs.ItemsSource>
      </zones:WindowTabs>
    </Grid>
    <Grid Grid.Row="0" Grid.Column="1">

      <zones:WindowTabs VisibilityCondition="AlwaysVisible">
        <zones:WindowTabs.ItemsSource>
          <CompositeCollection>
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference RightMain}}" />
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference TopRight}}" />
            <CollectionContainer Collection="{Binding Windows, Source={x:Reference BottomRight}}" />
          </CompositeCollection>
        </zones:WindowTabs.ItemsSource>
      </zones:WindowTabs>
    </Grid>


    <!-- Create window zone -->
    <zones:Zone x:Name="MasterStack" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" behavior:Hotkey.MoveTo="Ctrl+Alt+Windows+Shift+F12" />
    <zones:Zone x:Name="LeftMain" Grid.Column="0" Grid.RowSpan="2" Grid.Row="1" behavior:Hotkey.MoveTo="Ctrl+Alt+Windows+Shift+F10" />
    <zones:Zone x:Name="RightMain" Grid.Column="1" Grid.RowSpan="2" Grid.Row="1" behavior:Hotkey.MoveTo="Ctrl+Alt+Windows+Shift+F11" />
    <zones:Zone x:Name="TopMain" Grid.Row="1" Grid.ColumnSpan="2" behavior:Hotkey.MoveTo="Ctrl+Alt+Windows+Shift+F2"/>
    <zones:Zone x:Name="BottomMain" Grid.Row="2" Grid.ColumnSpan="2" behavior:Hotkey.MoveTo="Ctrl+Alt+Windows+Shift+F9"/>
    <zones:Zone x:Name="TopLeft" Grid.Column="0" Grid.Row="1" />
    <zones:Zone x:Name="TopRight" Grid.Column="1" Grid.Row="1" />
    <zones:Zone x:Name="BottomLeft" Grid.Column="0" Grid.Row="2" />
    <zones:Zone x:Name="BottomRight" Grid.Column="1" Grid.Row="2" />

    <!-- GUI hints for drag-capture -->
    <Border Grid.ColumnSpan="2" Grid.RowSpan="2" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" zones:Layout.IsHint="True" Width="160" Height="160" Background="#44F">
      <!-- Find more symbols from Segoe UI Symbol in Character Map app -->
      <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe UI Symbol" Foreground="White" Text="" FontSize="80"/>
    </Border>
    <!-- GUI is interactable by default, this just binds action to appropriate zone -->
    <zones:Zone Grid.Column="0" Grid.RowSpan="2" Grid.Row="1" Margin="{Binding Source={StaticResource GripSize}, Converter={StaticResource ThicknessConverter}}" Target="{Binding ElementName=LeftMain}" />
    <zones:Zone Grid.Column="1" Grid.RowSpan="2" Grid.Row="1" Margin="{Binding Source={StaticResource GripSize}, Converter={StaticResource ThicknessConverter}}" Target="{Binding ElementName=RightMain}" />
    <zones:Zone Grid.Row="1" Grid.ColumnSpan="2" Grid.Column="0" Margin="{Binding Source={StaticResource GripSize}, Converter={StaticResource ThicknessConverter}}" Target="{Binding ElementName=TopMain}" />
    <zones:Zone Grid.Row="2" Grid.ColumnSpan="2" Grid.Column="0" Margin="{Binding Source={StaticResource GripSize}, Converter={StaticResource ThicknessConverter}}" Target="{Binding ElementName=BottomMain}" />
    <zones:Zone Grid.ColumnSpan="2" Grid.RowSpan="2" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="360" Height="360" Target="{Binding ElementName=MasterStack}" />
  </Grid>

  <!-- ===================================================================== -->

  <!-- Describe column 3 -->
  <Grid Grid.Column="3">
    <!-- Define rows within column 1 -->
    <Grid.RowDefinitions>
      <!-- Row 0 automatic sizing (for tab bar) -->
      <RowDefinition Height="Auto"/>
      <!-- Row 1 sizing use remainder of screen (where windows go) -->
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <!-- Create tab bar (row 0) -->
    <zones:WindowTabs VisibilityCondition="AlwaysVisible">

      <zones:WindowTabs.ItemsSource>
        <CompositeCollection>
          <zones:ZoneElement Content="{Binding ViewModel, Source={x:Reference SecondaryStack}}" />
          <CollectionContainer Collection="{Binding Windows, Source={x:Reference SecondarySingle}}"/>
        </CompositeCollection>
      </zones:WindowTabs.ItemsSource>
    </zones:WindowTabs>
    <!-- Describe row 1 -->
    <Grid Grid.Row="1">
      <zones:Zone x:Name="SecondarySingle" Id="Secondary" behavior:Hotkey.MoveTo="Ctrl+Alt+Windows+Shift+F3"/>
      <zones:Zone x:Name="SecondaryStack" Id="Secondary Stack">
        <zones:Zone.Layout>
          <ItemsPanelTemplate>
            <!-- Autosize windows in 1 column -->
            <UniformGrid Columns="1"/>
          </ItemsPanelTemplate>
        </zones:Zone.Layout>
      </zones:Zone>

      <!-- GUI hints for drag-capture -->
      <Border Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" zones:Layout.IsHint="True" Width="160" Height="160" Background="#44F">
        <!-- Find more symbols from Segoe UI Symbol in Character Map app -->
        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Segoe UI Symbol" Foreground="White" Text="" FontSize="80"/>
      </Border>
      <!-- GUI is interactable by default, this just binds action to appropriate zone -->
      <zones:Zone HorizontalAlignment="Center" VerticalAlignment="Center" Width="160" Height="160" Target="{Binding ElementName=SecondarySingle}" />
    </Grid>
  </Grid>

  <!-- ===================================================================== -->

  <!-- Describe column 2 -->
  <!-- Create a resizegrip for column resizing -->
  <!-- The SecondaryStack tab bar (above) mostly exists to make clicking this easier -->
  <!-- This is listed last because StackWM assigns highest ZIndex to the last item defined -->
  <!-- Without ShowPreview, resize is 'realtime' which sucks on laptop -->
  <GridSplitter Grid.Column="2" ResizeBehavior="PreviousAndNext" Margin="-10 0 -10 0" Width="10" ShowsPreview="True">
    <GridSplitter.Style>
      <Style TargetType="GridSplitter">
        <Setter Property="Opacity" Value="0"/>
        <Style.Triggers>
          <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Opacity" Value=".75"/>
          </Trigger>
        </Style.Triggers>
      </Style>
    </GridSplitter.Style>
  </GridSplitter>

  <!-- ===================================================================== -->

</Grid>